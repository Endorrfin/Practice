/**
|--------------------------------------------------
| ======= <<<--- TASK #1 - palindrome --->>>  =======
|--------------------------------------------------
*/

/*
Написать функцию, которая проверяет, является ли строка палиндромом, или нет. Вернуть false или
true. Примечание: Палиндро́м - пе́ревертень — число, буквосочетание, слово или текст, 
одинаково читающееся в обоих направлениях.
*/

// ---------------- OPTION I ----------------
function palindrome(str) {
  str = str.toLowerCase(); // перевод строки в нижний регистр
  console.log(str);
  str2 = str.split(''); // трансформация слово по буквенно в массив
  console.log(str2);
  str2 = str2.reverse(); // переворачивание массива задом на перед
  console.log(str2);
  str2 = str2.join(''); // объединение побуквенного массива в слово
  console.log(str2);

  if (str == str2) {
    return true
  } else {
    return false
  }
}

// console.log(palindrome('aBBa'));
// console.log(palindrome('каток'));
// console.log(palindrome('потоп'));
// console.log(palindrome('око'));
// console.log(palindrome(''));
// console.log(palindrome('кландайк'));

// ---------------- OPTION II ----------------
const palindrome2 = data => {
  data.toLowerCase();
  return data == [...data].reverse().join('');
}

console.log(palindrome2('SOS'));
console.log(palindrome2('SOFT'));

// ---------------- OPTION III ----------------
isPalindrom = string => string.toLowerCase() === [...string].reverse().join('').toLowerCase();

console.log(palindrome2('SOS'));
console.log(palindrome2('Ароза упала на лапу Азора'));

// Заключение: Какие минусы данного подхода?
// если в данных есть спецсимвол эмодзи, который складывается с 2-х симовол результат будет некорректный.

/**
|--------------------------------------------------
  ======= <<<--- TASK #2 - кавычки  --->>>  =======
  Написать решение, которое:
  1. Проверит в правильном ли порядке написаны кавычки!
  2. Проверит соответствует ли к-во открывающих кавычек к-ву закрывающих кавычек.
|--------------------------------------------------
*/

let roundBrackets = '()()((())))';
// проверка длинны строки (length)
console.log(roundBrackets.length);

// создадим глобальную переменную count
let count = 0;

// перебираем с помощью цикла каждую кавычку
for (let i = 0; i <= roundBrackets.length; i++) {
  // console.log(roundИrackets[i]);
  if (roundBrackets[i] == '(') {
    count++; // увеличиваем на единицу count = count + 1
  }
  if (roundBrackets[i] == ')') {
    count--; // уменьшаем на единицу count = count - 1
  }
  // Делаем проверку правельности последовательности кавычек
  if (count < 0) {
    console.log(false);
    break // выходим из цыкла проверки
  }
}
console.log(count);

if (count != 0) {
  console.log(false)
} else console.log(true);




/**
|--------------------------------------------------
| ======= <<<--- TASK #3 -  --->>>  =======
|--------------------------------------------------
*/
/*

*/


/**
|--------------------------------------------------
| ======= <<<--- TASK #4 -  --->>>  =======
|--------------------------------------------------
*/
/*

*/

/**
|--------------------------------------------------
| ======= <<<--- TASK #5 -  --->>>  =======
|--------------------------------------------------
*/
/*
/*

*/


/**
|--------------------------------------------------
| ======= <<<--- TASK #6 -  --->>>  =======
|--------------------------------------------------
*/
/* 

*/